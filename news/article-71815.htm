<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashxmeta.github.io/news/article-71815.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>类和对象的学习心得</title>
        <meta name="description" content="&nbsp;    &nbsp;    1，  类和对象的定义：    类就是一类对象的统称。对象就是这一类具体化的一个实例。    2，类和类的实例化    用类型创建对象的过程，称为类的实例化  " />
        <link rel="icon" href="/assets/website/img/clashxmeta/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ClashX Meta免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashxmeta.github.io/news/article-71815.htm" />
    <meta property="og:site_name" content="ClashX Meta免费机场订阅节点官网" />
    <meta property="og:title" content="类和对象的学习心得" />
    <meta property="og:image" content="https://clashxmeta.github.io/uploads/20241102-1/8b46bfda95802afbdf51f5b67f73659d.webp" />
        <meta property="og:release_date" content="2025-03-11T07:48:23" />
    <meta property="og:updated_time" content="2025-03-11T07:48:23" />
        <meta property="og:description" content="&nbsp;    &nbsp;    1，  类和对象的定义：    类就是一类对象的统称。对象就是这一类具体化的一个实例。    2，类和类的实例化    用类型创建对象的过程，称为类的实例化  " />
        
    <link rel="preconnect" href="https://fonts.gstatic.com/">
    <link href="/assets/website/css/clashxmeta/css2.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/clashxmeta/animate.min.css">
    <link href="/assets/website/css/clashxmeta/pace-theme-loading-bar.css" rel="stylesheet">
    <link href="/assets/website/css/clashxmeta/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/clashxmeta/YouTubePopUp.css">
    <link rel="stylesheet" href="/assets/website/css/clashxmeta/styles.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="类和对象的学习心得">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-KHJRY7ZEBT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-KHJRY7ZEBT');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div id="preloader">
        <div class="loadingio-spinner-ripple-n04314c8ef9">
            <div class="ldio-r67ztvwtjg">
                <div></div>
                <div></div>
            </div>
        </div>
    </div>
    <div id="back-to-top" class="d-flex align-items-center justify-content-center display-6">☝️</div>
    <div class="bg-gradient-to-top">
                <!-- ::::::::::: NAVBAR :::::::::::::::-->
        <div class="fixed-top">
            <div class="container">
                <nav class="navbar navbar-expand-lg navbar-light pt-4">
                    <div class="container-fluid p-0">
                        <a class="navbar-brand" href="/">
                                                        <span>ClashX Meta</span>
                                                    </a>
                        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="navbar-toggler-icon"></span>
                        </button>
                        <div class="collapse navbar-collapse" id="navbarNav">
                            <ul class="navbar-nav me-auto mx-auto">
                                                                <li class="nav-item">
                                    <a class="nav-link" href="/">首页</a>
                                </li>
                                                                <li class="nav-item">
                                    <a class="nav-link" href="/free-nodes/">免费节点</a>
                                </li>
                                                                <li class="nav-item">
                                    <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                                </li>
                                                                <li class="nav-item">
                                    <a class="nav-link" href="/client.htm">客户端</a>
                                </li>
                                                                <li class="nav-item">
                                    <a class="nav-link" href="/news/">新闻资讯</a>
                                </li>
                                                            </ul>
                            
                        </div>
                    </div>
                </nav>
            </div>
        </div>
        <!-- ::::::::::: /END NAVBAR ::::::::::-->
        <!-- ::::::::::: INTRODUCTION :::::::::::::::-->
        <div id="blog-hero">
            <div class="container">
                <div class="row justify-content-between">
                    <div class="col-sm-8 offset-sm-2">
                        <h1 class="display-6 font-weight-medium pb-3 text-center">类和对象的学习心得</h1>
                        <p class="accent-text-color pb-3 text-center font-size-14">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <!-- ::::::::::: /END INTRODUCTION ::::::::::-->
    </div>
    <!-- ::::::::::::::: ABOUT US ::::::::::::::::::::::::-->
    <div class="container wow animate__fadeInUp pt-5" id="about">
        <div class="row">
            <div class="col-md-9">
                                <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> <div>  &nbsp; </div> <div>  &nbsp; </div> <div>  1，<br />  <strong>类和对象的定义：</strong> </div> <div>  <span style="color:#333333;">类就是一类对象的统称。对象就是这一类具体化的一个实例。</span> </div> <div>  <span style="color:#333333;">2，<strong>类和类的实例化</strong></span> </div> <div>  <span style="color:#333333;">用类型创建对象的过程，称为类的实例化 </span> </div> <div> <div>   <span style="color:#333333;">1. </span><br />   <span style="color:#333333;">类只是</span><br />   <span style="color:#333333;">一个</span><br />   <span style="color:#333333;">模型</span><br />   <span style="color:#333333;">一样的东西，限定了类有哪些成员</span><br />   <span style="color:#333333;">. </span>  </div> <div>   <span style="color:#333333;">2. </span><br />   <span style="color:#333333;">一个类可以实例化出多个对象，实例化出的对象占用实际的物理空间，存储类成员变量。</span>  </div> <div>   <span style="color:#333333;">创建：</span>  </div> <div> <pre><code>class Person{     //成员属性     public String name ;          //访问修饰限定符：public   private   protected  什么都不写     public int age  ;             //name和age是实例成员变量     public static int count;       //静态成员变量，在方法区，不管new多少个，只有一个count     /*public boolean flg;     public char ch;*/     //成员方法     public void eat(){         System.out.println("吃饭");     } }</code></pre> <p>实例化：</p> <pre><code>public static void main(String[]args){         //Person是类型  person是局部变量（属于引用类型）          //person 1在栈上   new Person在堆上          Person person1 = new Person();//对象的实例化          Person person2 = new Person();          Person person3 = new Person();          Person person4 = new Person();          Person person5 = new Person();          System.out.println(person1);          System.out.println(person2);</code></pre> <p>访问：</p> <pre><code>public static void main(String[] args) {         Person person = new Person(); //实例化一个对象         System.out.println(person.age);         System.out.println(person.name);         person.eat();          /*System.out.println(person.flg);         System.out.println(person.ch);         int a;         System.out.println(a);   */     }</code></pre> <p><strong>局部变量</strong>：定义在方法当中，特点是当方法结束后该变量也随之消失，因为他存储在栈上。</p> <p>1.作用域：在当前方法的括号内</p> <p>2.生命周期：当方法结束，方法内的局部变量也随之消失。</p> </p></div> <p><strong>成员属性</strong>：（定义在类内部，方法外部的变量）</p> <p>1，实例成员变量&nbsp; ：age&nbsp; &nbsp;name （在堆上）</p> <p>2，静态成员变量&nbsp; ：count&nbsp; &nbsp;（在方法区）</p> <p>接下来看一下如何调用：</p> <pre><code>class Person {     //成员属性     public String name;          //访问修饰限定符：public   private   protected  什么都不写     public int age;             //name和age是实例成员变量     public static int count;       //静态成员变量，在方法区，不管new多少个，只有一个count      /*public boolean flg;     public char ch;*/     //成员方法     public void eat() {         System.out.println("吃饭");     }      public static void func() {         System.out.println("静态的方法");     }      public void show() {         System.out.println("姓名：" + name + "年龄" + age);     } } public class TestDemo {     public static void main(String[] args) {         Person person1 = new Person();         person1.name = "佐助";         person1.show();         System.out.println(person1);     }      public static void main7(String[] args) {         Person person1 = new Person();         person1.name = "佩奇001";         //person2这个引用指向了person1这个对象         Person person2 = person1;         System.out.println(person2.name);     }       public static void main6(String[] args) {         Person person1 = null;         person1.name = "佩奇";         System.out.println(person1.name);     }</code></pre> <p><strong>Alt+Insert快捷键直接生产show函数</strong></p> <p><strong>static关键字</strong></p> <p>1，修饰成员变量：静态成员变量</p> <p>2，修饰成员方法：静态成员方法</p> <p>3，修饰代码块：</p> <p>注意：静态的方法内部不能有实例数据成员。</p> <p>原因：1.静态的方法不依赖于对象，而实例数据成员需要通过实例化才能产生（new）</p> <p>2.静态的方法和静态的数据-&gt;静态的优先被执行的</p> <pre><code>public String name;          //访问修饰限定符：public   private   protected  什么都不写     public int age;             //name和age是实例成员变量     public static int count;  //静态成员变量，在方法区，不管new多少个，只有一个count     // 加static是静态的     public final int SIZE1 = 10;  //被final修饰的常量，对象，和final没关系，堆     public static final int SIZE2 = 10;  //方法区</code></pre> <p><strong>封装：</strong></p> <p><span style="color:#333333;"><strong>private</strong></span><span style="color:#333333;"><strong>实现封装 </strong></span>：</p> <pre><code>class Person2{     private String name;     private int age;     public void setName(String myName){         name = myName;     }     public void setAge(int myAge){         age = myAge;     }     public int getAge(){         return age;     }     public String getName(){         return name;     } } public class TestDemo2 {     public static void main(String[] args) {         Person2 person2 = new Person2();         person2.setAge(15);         person2.setName("卡卡西");         System.out.println(person2.getAge());         System.out.println(person2.getName());      } }</code></pre> <p>普通方法：public&nbsp; 返回值&nbsp; 方法名&nbsp; （参数列表）{<!-- --></p> <p>方法体</p> <p>}</p> <p><strong>构造方法：</strong></p> <p>前提问题：实例化一个对象分为几步？</p> <p>1.为对象分配内存</p> <p>2.调用合适的构造方法，才会产生一个对象。</p> <pre><code>class Person2{     private String name;     private int age;     //alt+insert     // (get and setter)快速生成     //(Constructor)     //this代表当前对象的引用。      public Person2(){         System.out.println("Person2()");     }     public Person2(String name){         this.name = name;         System.out.println("Person2(String)");         System.out.println(this.name);     }     public Person2(String name,int age){      this.name = name;      this.age = age;         System.out.println("Person2(String,int)");     }      public String getName() {         return name;     }      public void setName(String name) {         this.name = name;     }      public int getAge() {         return age;     }      public void setAge(int age) {         this.age = age;     }        private void func4(){         System.out.println("func()");     }     public void  func2(){         func4();     }    }   public class TestDemo2 {     public static void main(String[] args) {         Person2 person2 = new Person2();         Person2 person3 = new Person2("Java");         Person2 person4 = new Person2("鸣人",18);     }       public static void main1(String[] args) {         Person2 person2 = new Person2();         person2.setAge(15);         person2.setName("卡卡西");         person2.func2();         System.out.println(person2.getAge());         System.out.println(person2.getName());      } }</code></pre> <p>到此为止，下集更精彩</p> </div></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-71146.htm">动物疫苗注射器视频讲解教程（动物疫苗工艺流程）</a></p>
                                        <p>下一个：<a href="/news/article-71819.htm">动物打预防针去哪里（动物打预防针多少钱）</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-65381.htm" title="聊城市宠物饲料有限公司（聊城市宠物饲料有限公司招聘）">聊城市宠物饲料有限公司（聊城市宠物饲料有限公司招聘）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-6-node-share-links.htm" title="1月6日→22.8M/S|2025年最新免费节点ClashX Meta订阅链接地址">1月6日→22.8M/S|2025年最新免费节点ClashX Meta订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-35752.htm" title="动物疫苗行业会议 动物疫苗行业会议内容">动物疫苗行业会议 动物疫苗行业会议内容</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-18-free-node-subscribe.htm" title="2月18日→20.4M/S|2025年最新免费节点ClashX Meta订阅链接地址">2月18日→20.4M/S|2025年最新免费节点ClashX Meta订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-14-node-share.htm" title="2月14日→18.6M/S|2025年最新免费节点ClashX Meta订阅链接地址">2月14日→18.6M/S|2025年最新免费节点ClashX Meta订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-61167.htm" title="SpringMVC的异步">SpringMVC的异步</a></li>
                        <li class="py-2"><a href="/news/article-45131.htm" title="自己给宠物打疫苗违法吗怎么举报（自己给宠物打疫苗违法吗怎么举报电话）">自己给宠物打疫苗违法吗怎么举报（自己给宠物打疫苗违法吗怎么举报电话）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-10-node-share-links.htm" title="3月10日→22.4M/S|2025年最新免费节点ClashX Meta订阅链接地址">3月10日→22.4M/S|2025年最新免费节点ClashX Meta订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-57149.htm" title="天津天照集团董事长（天照科技有限公司）">天津天照集团董事长（天照科技有限公司）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-24-free-node-subscribe.htm" title="1月24日→20M/S|2025年最新免费节点ClashX Meta订阅链接地址">1月24日→20M/S|2025年最新免费节点ClashX Meta订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">83</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- ::::::::::::::: /END ABOUT US :::::::::::::::::::-->
        <!-- ::::::::::::::: FOOTER ::::::::::::::::::::-->
    <div id="footer" class="pt-lg-5 pt-0 mt-0 mt-lg-5 text-center text-lg-start">
        <div class="container">
            <hr class="hr">
            <div class="row gy-4 gy-lg-0 pb-5 pb-lg-4">
                <div class="col-sm-4 font-size-14 accent-text-color text-center text-lg-start">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <a href="/">ClashX Meta免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                </div>
                <div class="col-sm-4 text-center">
                    <ul class="list-unstyled font-size-14 list-inline mb-0">
                        <li class="list-inline-item"><a class="accent-text-color text-decoration-none" href="#">Terms</a></li>
                        <li class="list-inline-item accent-text-color">·</li>
                        <li class="list-inline-item"><a class="accent-text-color text-decoration-none" href="#">Privacy Policy</a></li>
                    </ul>
                </div>
                <div class="col-sm-4 text-lg-end text-center">
                    <ul class="list-unstyled font-size-14 list-inline mb-0">
                        <li class="list-inline-item"><a class="accent-text-color text-decoration-none" href="#"><i data-feather="facebook" class="icon-24"></i></a></li>
                        <li class="list-inline-item"><a class="accent-text-color text-decoration-none" href="#"><i data-feather="twitter" class="icon-24"></i></a></li>
                        <li class="list-inline-item"><a class="accent-text-color text-decoration-none" href="#"><i data-feather="instagram" class="icon-24"></i></a></li>
                        <li class="list-inline-item"><a class="accent-text-color text-decoration-none" href="#"><i data-feather="slack" class="icon-24"></i></a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- ::::::::::::::: /END FOOTER :::::::::::::::-->
    <script src="/assets/website/js/frontend/clashxmeta/jquery-1.12.4.min.js"></script>
    <script src="/assets/website/js/frontend/clashxmeta/pace.min.js"></script>
    <script src="/assets/website/js/frontend/clashxmeta/wow.js"></script>
    <script src="/assets/website/js/frontend/clashxmeta/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/clashxmeta/feather.min.js"></script>
    <script src="/assets/website/js/frontend/clashxmeta/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>